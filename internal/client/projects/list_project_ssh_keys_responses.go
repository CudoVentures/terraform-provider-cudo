// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CudoVentures/terraform-provider-cudo/internal/models"
)

// ListProjectSSHKeysReader is a Reader for the ListProjectSSHKeys structure.
type ListProjectSSHKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProjectSSHKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProjectSSHKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListProjectSSHKeysDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListProjectSSHKeysOK creates a ListProjectSSHKeysOK with default headers values
func NewListProjectSSHKeysOK() *ListProjectSSHKeysOK {
	return &ListProjectSSHKeysOK{}
}

/*
ListProjectSSHKeysOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListProjectSSHKeysOK struct {
	Payload *models.ListProjectSSHKeysResponse
}

// IsSuccess returns true when this list project Ssh keys o k response has a 2xx status code
func (o *ListProjectSSHKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list project Ssh keys o k response has a 3xx status code
func (o *ListProjectSSHKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list project Ssh keys o k response has a 4xx status code
func (o *ListProjectSSHKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list project Ssh keys o k response has a 5xx status code
func (o *ListProjectSSHKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list project Ssh keys o k response a status code equal to that given
func (o *ListProjectSSHKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list project Ssh keys o k response
func (o *ListProjectSSHKeysOK) Code() int {
	return 200
}

func (o *ListProjectSSHKeysOK) Error() string {
	return fmt.Sprintf("[GET /v1/project/{projectId}/ssh-keys][%d] listProjectSshKeysOK  %+v", 200, o.Payload)
}

func (o *ListProjectSSHKeysOK) String() string {
	return fmt.Sprintf("[GET /v1/project/{projectId}/ssh-keys][%d] listProjectSshKeysOK  %+v", 200, o.Payload)
}

func (o *ListProjectSSHKeysOK) GetPayload() *models.ListProjectSSHKeysResponse {
	return o.Payload
}

func (o *ListProjectSSHKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListProjectSSHKeysResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProjectSSHKeysDefault creates a ListProjectSSHKeysDefault with default headers values
func NewListProjectSSHKeysDefault(code int) *ListProjectSSHKeysDefault {
	return &ListProjectSSHKeysDefault{
		_statusCode: code,
	}
}

/*
ListProjectSSHKeysDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListProjectSSHKeysDefault struct {
	_statusCode int

	Payload *models.Status
}

// IsSuccess returns true when this list project Ssh keys default response has a 2xx status code
func (o *ListProjectSSHKeysDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list project Ssh keys default response has a 3xx status code
func (o *ListProjectSSHKeysDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list project Ssh keys default response has a 4xx status code
func (o *ListProjectSSHKeysDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list project Ssh keys default response has a 5xx status code
func (o *ListProjectSSHKeysDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list project Ssh keys default response a status code equal to that given
func (o *ListProjectSSHKeysDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list project Ssh keys default response
func (o *ListProjectSSHKeysDefault) Code() int {
	return o._statusCode
}

func (o *ListProjectSSHKeysDefault) Error() string {
	return fmt.Sprintf("[GET /v1/project/{projectId}/ssh-keys][%d] ListProjectSshKeys default  %+v", o._statusCode, o.Payload)
}

func (o *ListProjectSSHKeysDefault) String() string {
	return fmt.Sprintf("[GET /v1/project/{projectId}/ssh-keys][%d] ListProjectSshKeys default  %+v", o._statusCode, o.Payload)
}

func (o *ListProjectSSHKeysDefault) GetPayload() *models.Status {
	return o.Payload
}

func (o *ListProjectSSHKeysDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
