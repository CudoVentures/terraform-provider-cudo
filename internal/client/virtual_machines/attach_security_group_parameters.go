// Code generated by go-swagger; DO NOT EDIT.

package virtual_machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAttachSecurityGroupParams creates a new AttachSecurityGroupParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAttachSecurityGroupParams() *AttachSecurityGroupParams {
	return &AttachSecurityGroupParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAttachSecurityGroupParamsWithTimeout creates a new AttachSecurityGroupParams object
// with the ability to set a timeout on a request.
func NewAttachSecurityGroupParamsWithTimeout(timeout time.Duration) *AttachSecurityGroupParams {
	return &AttachSecurityGroupParams{
		timeout: timeout,
	}
}

// NewAttachSecurityGroupParamsWithContext creates a new AttachSecurityGroupParams object
// with the ability to set a context for a request.
func NewAttachSecurityGroupParamsWithContext(ctx context.Context) *AttachSecurityGroupParams {
	return &AttachSecurityGroupParams{
		Context: ctx,
	}
}

// NewAttachSecurityGroupParamsWithHTTPClient creates a new AttachSecurityGroupParams object
// with the ability to set a custom HTTPClient for a request.
func NewAttachSecurityGroupParamsWithHTTPClient(client *http.Client) *AttachSecurityGroupParams {
	return &AttachSecurityGroupParams{
		HTTPClient: client,
	}
}

/*
AttachSecurityGroupParams contains all the parameters to send to the API endpoint

	for the attach security group operation.

	Typically these are written to a http.Request.
*/
type AttachSecurityGroupParams struct {

	// ID.
	ID string

	// ProjectID.
	ProjectID string

	// SecurityGroupID.
	SecurityGroupID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the attach security group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttachSecurityGroupParams) WithDefaults() *AttachSecurityGroupParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the attach security group params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AttachSecurityGroupParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the attach security group params
func (o *AttachSecurityGroupParams) WithTimeout(timeout time.Duration) *AttachSecurityGroupParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the attach security group params
func (o *AttachSecurityGroupParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the attach security group params
func (o *AttachSecurityGroupParams) WithContext(ctx context.Context) *AttachSecurityGroupParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the attach security group params
func (o *AttachSecurityGroupParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the attach security group params
func (o *AttachSecurityGroupParams) WithHTTPClient(client *http.Client) *AttachSecurityGroupParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the attach security group params
func (o *AttachSecurityGroupParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the attach security group params
func (o *AttachSecurityGroupParams) WithID(id string) *AttachSecurityGroupParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the attach security group params
func (o *AttachSecurityGroupParams) SetID(id string) {
	o.ID = id
}

// WithProjectID adds the projectID to the attach security group params
func (o *AttachSecurityGroupParams) WithProjectID(projectID string) *AttachSecurityGroupParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the attach security group params
func (o *AttachSecurityGroupParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithSecurityGroupID adds the securityGroupID to the attach security group params
func (o *AttachSecurityGroupParams) WithSecurityGroupID(securityGroupID *string) *AttachSecurityGroupParams {
	o.SetSecurityGroupID(securityGroupID)
	return o
}

// SetSecurityGroupID adds the securityGroupId to the attach security group params
func (o *AttachSecurityGroupParams) SetSecurityGroupID(securityGroupID *string) {
	o.SecurityGroupID = securityGroupID
}

// WriteToRequest writes these params to a swagger request
func (o *AttachSecurityGroupParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	if o.SecurityGroupID != nil {

		// query param securityGroupId
		var qrSecurityGroupID string

		if o.SecurityGroupID != nil {
			qrSecurityGroupID = *o.SecurityGroupID
		}
		qSecurityGroupID := qrSecurityGroupID
		if qSecurityGroupID != "" {

			if err := r.SetQueryParam("securityGroupId", qSecurityGroupID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
