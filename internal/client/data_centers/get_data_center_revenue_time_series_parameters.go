// Code generated by go-swagger; DO NOT EDIT.

package data_centers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDataCenterRevenueTimeSeriesParams creates a new GetDataCenterRevenueTimeSeriesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDataCenterRevenueTimeSeriesParams() *GetDataCenterRevenueTimeSeriesParams {
	return &GetDataCenterRevenueTimeSeriesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDataCenterRevenueTimeSeriesParamsWithTimeout creates a new GetDataCenterRevenueTimeSeriesParams object
// with the ability to set a timeout on a request.
func NewGetDataCenterRevenueTimeSeriesParamsWithTimeout(timeout time.Duration) *GetDataCenterRevenueTimeSeriesParams {
	return &GetDataCenterRevenueTimeSeriesParams{
		timeout: timeout,
	}
}

// NewGetDataCenterRevenueTimeSeriesParamsWithContext creates a new GetDataCenterRevenueTimeSeriesParams object
// with the ability to set a context for a request.
func NewGetDataCenterRevenueTimeSeriesParamsWithContext(ctx context.Context) *GetDataCenterRevenueTimeSeriesParams {
	return &GetDataCenterRevenueTimeSeriesParams{
		Context: ctx,
	}
}

// NewGetDataCenterRevenueTimeSeriesParamsWithHTTPClient creates a new GetDataCenterRevenueTimeSeriesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDataCenterRevenueTimeSeriesParamsWithHTTPClient(client *http.Client) *GetDataCenterRevenueTimeSeriesParams {
	return &GetDataCenterRevenueTimeSeriesParams{
		HTTPClient: client,
	}
}

/*
GetDataCenterRevenueTimeSeriesParams contains all the parameters to send to the API endpoint

	for the get data center revenue time series operation.

	Typically these are written to a http.Request.
*/
type GetDataCenterRevenueTimeSeriesParams struct {

	// EndTime.
	//
	// Format: date-time
	EndTime strfmt.DateTime

	// ID.
	ID string

	// Interval.
	//
	// Default: "INTERVAL_UNKNOWN"
	Interval string

	// StartTime.
	//
	// Format: date-time
	StartTime strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get data center revenue time series params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDataCenterRevenueTimeSeriesParams) WithDefaults() *GetDataCenterRevenueTimeSeriesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get data center revenue time series params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDataCenterRevenueTimeSeriesParams) SetDefaults() {
	var (
		intervalDefault = string("INTERVAL_UNKNOWN")
	)

	val := GetDataCenterRevenueTimeSeriesParams{
		Interval: intervalDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) WithTimeout(timeout time.Duration) *GetDataCenterRevenueTimeSeriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) WithContext(ctx context.Context) *GetDataCenterRevenueTimeSeriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) WithHTTPClient(client *http.Client) *GetDataCenterRevenueTimeSeriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndTime adds the endTime to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) WithEndTime(endTime strfmt.DateTime) *GetDataCenterRevenueTimeSeriesParams {
	o.SetEndTime(endTime)
	return o
}

// SetEndTime adds the endTime to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) SetEndTime(endTime strfmt.DateTime) {
	o.EndTime = endTime
}

// WithID adds the id to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) WithID(id string) *GetDataCenterRevenueTimeSeriesParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) SetID(id string) {
	o.ID = id
}

// WithInterval adds the interval to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) WithInterval(interval string) *GetDataCenterRevenueTimeSeriesParams {
	o.SetInterval(interval)
	return o
}

// SetInterval adds the interval to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) SetInterval(interval string) {
	o.Interval = interval
}

// WithStartTime adds the startTime to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) WithStartTime(startTime strfmt.DateTime) *GetDataCenterRevenueTimeSeriesParams {
	o.SetStartTime(startTime)
	return o
}

// SetStartTime adds the startTime to the get data center revenue time series params
func (o *GetDataCenterRevenueTimeSeriesParams) SetStartTime(startTime strfmt.DateTime) {
	o.StartTime = startTime
}

// WriteToRequest writes these params to a swagger request
func (o *GetDataCenterRevenueTimeSeriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param endTime
	qrEndTime := o.EndTime
	qEndTime := qrEndTime.String()
	if qEndTime != "" {

		if err := r.SetQueryParam("endTime", qEndTime); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// query param interval
	qrInterval := o.Interval
	qInterval := qrInterval
	if qInterval != "" {

		if err := r.SetQueryParam("interval", qInterval); err != nil {
			return err
		}
	}

	// query param startTime
	qrStartTime := o.StartTime
	qStartTime := qrStartTime.String()
	if qStartTime != "" {

		if err := r.SetQueryParam("startTime", qStartTime); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
