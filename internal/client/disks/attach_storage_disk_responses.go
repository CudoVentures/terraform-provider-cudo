// Code generated by go-swagger; DO NOT EDIT.

package disks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CudoVentures/terraform-provider-cudo/internal/models"
)

// AttachStorageDiskReader is a Reader for the AttachStorageDisk structure.
type AttachStorageDiskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttachStorageDiskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAttachStorageDiskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAttachStorageDiskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAttachStorageDiskOK creates a AttachStorageDiskOK with default headers values
func NewAttachStorageDiskOK() *AttachStorageDiskOK {
	return &AttachStorageDiskOK{}
}

/*
AttachStorageDiskOK describes a response with status code 200, with default header values.

A successful response.
*/
type AttachStorageDiskOK struct {
	Payload models.AttachStorageDiskResponse
}

// IsSuccess returns true when this attach storage disk o k response has a 2xx status code
func (o *AttachStorageDiskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this attach storage disk o k response has a 3xx status code
func (o *AttachStorageDiskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach storage disk o k response has a 4xx status code
func (o *AttachStorageDiskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this attach storage disk o k response has a 5xx status code
func (o *AttachStorageDiskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this attach storage disk o k response a status code equal to that given
func (o *AttachStorageDiskOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the attach storage disk o k response
func (o *AttachStorageDiskOK) Code() int {
	return 200
}

func (o *AttachStorageDiskOK) Error() string {
	return fmt.Sprintf("[PATCH /v1/projects/{projectId}/disk/{id}/attach][%d] attachStorageDiskOK  %+v", 200, o.Payload)
}

func (o *AttachStorageDiskOK) String() string {
	return fmt.Sprintf("[PATCH /v1/projects/{projectId}/disk/{id}/attach][%d] attachStorageDiskOK  %+v", 200, o.Payload)
}

func (o *AttachStorageDiskOK) GetPayload() models.AttachStorageDiskResponse {
	return o.Payload
}

func (o *AttachStorageDiskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachStorageDiskDefault creates a AttachStorageDiskDefault with default headers values
func NewAttachStorageDiskDefault(code int) *AttachStorageDiskDefault {
	return &AttachStorageDiskDefault{
		_statusCode: code,
	}
}

/*
AttachStorageDiskDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AttachStorageDiskDefault struct {
	_statusCode int

	Payload *models.Status
}

// IsSuccess returns true when this attach storage disk default response has a 2xx status code
func (o *AttachStorageDiskDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this attach storage disk default response has a 3xx status code
func (o *AttachStorageDiskDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this attach storage disk default response has a 4xx status code
func (o *AttachStorageDiskDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this attach storage disk default response has a 5xx status code
func (o *AttachStorageDiskDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this attach storage disk default response a status code equal to that given
func (o *AttachStorageDiskDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the attach storage disk default response
func (o *AttachStorageDiskDefault) Code() int {
	return o._statusCode
}

func (o *AttachStorageDiskDefault) Error() string {
	return fmt.Sprintf("[PATCH /v1/projects/{projectId}/disk/{id}/attach][%d] AttachStorageDisk default  %+v", o._statusCode, o.Payload)
}

func (o *AttachStorageDiskDefault) String() string {
	return fmt.Sprintf("[PATCH /v1/projects/{projectId}/disk/{id}/attach][%d] AttachStorageDisk default  %+v", o._statusCode, o.Payload)
}

func (o *AttachStorageDiskDefault) GetPayload() *models.Status {
	return o.Payload
}

func (o *AttachStorageDiskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
