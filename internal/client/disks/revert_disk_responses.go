// Code generated by go-swagger; DO NOT EDIT.

package disks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/CudoVentures/terraform-provider-cudo/internal/models"
)

// RevertDiskReader is a Reader for the RevertDisk structure.
type RevertDiskReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevertDiskReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevertDiskOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRevertDiskDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRevertDiskOK creates a RevertDiskOK with default headers values
func NewRevertDiskOK() *RevertDiskOK {
	return &RevertDiskOK{}
}

/*
RevertDiskOK describes a response with status code 200, with default header values.

A successful response.
*/
type RevertDiskOK struct {
	Payload models.RevertDiskResponse
}

// IsSuccess returns true when this revert disk o k response has a 2xx status code
func (o *RevertDiskOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revert disk o k response has a 3xx status code
func (o *RevertDiskOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revert disk o k response has a 4xx status code
func (o *RevertDiskOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this revert disk o k response has a 5xx status code
func (o *RevertDiskOK) IsServerError() bool {
	return false
}

// IsCode returns true when this revert disk o k response a status code equal to that given
func (o *RevertDiskOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the revert disk o k response
func (o *RevertDiskOK) Code() int {
	return 200
}

func (o *RevertDiskOK) Error() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks/{id}/revert][%d] revertDiskOK  %+v", 200, o.Payload)
}

func (o *RevertDiskOK) String() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks/{id}/revert][%d] revertDiskOK  %+v", 200, o.Payload)
}

func (o *RevertDiskOK) GetPayload() models.RevertDiskResponse {
	return o.Payload
}

func (o *RevertDiskOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevertDiskDefault creates a RevertDiskDefault with default headers values
func NewRevertDiskDefault(code int) *RevertDiskDefault {
	return &RevertDiskDefault{
		_statusCode: code,
	}
}

/*
RevertDiskDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type RevertDiskDefault struct {
	_statusCode int

	Payload *models.Status
}

// IsSuccess returns true when this revert disk default response has a 2xx status code
func (o *RevertDiskDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this revert disk default response has a 3xx status code
func (o *RevertDiskDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this revert disk default response has a 4xx status code
func (o *RevertDiskDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this revert disk default response has a 5xx status code
func (o *RevertDiskDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this revert disk default response a status code equal to that given
func (o *RevertDiskDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the revert disk default response
func (o *RevertDiskDefault) Code() int {
	return o._statusCode
}

func (o *RevertDiskDefault) Error() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks/{id}/revert][%d] RevertDisk default  %+v", o._statusCode, o.Payload)
}

func (o *RevertDiskDefault) String() string {
	return fmt.Sprintf("[POST /v1/projects/{projectId}/disks/{id}/revert][%d] RevertDisk default  %+v", o._statusCode, o.Payload)
}

func (o *RevertDiskDefault) GetPayload() *models.Status {
	return o.Payload
}

func (o *RevertDiskDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Status)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
