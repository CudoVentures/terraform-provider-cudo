// Code generated by go-swagger; DO NOT EDIT.

package disks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteDiskSnapshotParams creates a new DeleteDiskSnapshotParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteDiskSnapshotParams() *DeleteDiskSnapshotParams {
	return &DeleteDiskSnapshotParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteDiskSnapshotParamsWithTimeout creates a new DeleteDiskSnapshotParams object
// with the ability to set a timeout on a request.
func NewDeleteDiskSnapshotParamsWithTimeout(timeout time.Duration) *DeleteDiskSnapshotParams {
	return &DeleteDiskSnapshotParams{
		timeout: timeout,
	}
}

// NewDeleteDiskSnapshotParamsWithContext creates a new DeleteDiskSnapshotParams object
// with the ability to set a context for a request.
func NewDeleteDiskSnapshotParamsWithContext(ctx context.Context) *DeleteDiskSnapshotParams {
	return &DeleteDiskSnapshotParams{
		Context: ctx,
	}
}

// NewDeleteDiskSnapshotParamsWithHTTPClient creates a new DeleteDiskSnapshotParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteDiskSnapshotParamsWithHTTPClient(client *http.Client) *DeleteDiskSnapshotParams {
	return &DeleteDiskSnapshotParams{
		HTTPClient: client,
	}
}

/*
DeleteDiskSnapshotParams contains all the parameters to send to the API endpoint

	for the delete disk snapshot operation.

	Typically these are written to a http.Request.
*/
type DeleteDiskSnapshotParams struct {

	// ID.
	ID string

	// ProjectID.
	ProjectID string

	// SnapshotID.
	SnapshotID string

	// VMID.
	VMID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete disk snapshot params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteDiskSnapshotParams) WithDefaults() *DeleteDiskSnapshotParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete disk snapshot params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteDiskSnapshotParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) WithTimeout(timeout time.Duration) *DeleteDiskSnapshotParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) WithContext(ctx context.Context) *DeleteDiskSnapshotParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) WithHTTPClient(client *http.Client) *DeleteDiskSnapshotParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) WithID(id string) *DeleteDiskSnapshotParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) SetID(id string) {
	o.ID = id
}

// WithProjectID adds the projectID to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) WithProjectID(projectID string) *DeleteDiskSnapshotParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithSnapshotID adds the snapshotID to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) WithSnapshotID(snapshotID string) *DeleteDiskSnapshotParams {
	o.SetSnapshotID(snapshotID)
	return o
}

// SetSnapshotID adds the snapshotId to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) SetSnapshotID(snapshotID string) {
	o.SnapshotID = snapshotID
}

// WithVMID adds the vMID to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) WithVMID(vMID string) *DeleteDiskSnapshotParams {
	o.SetVMID(vMID)
	return o
}

// SetVMID adds the vmId to the delete disk snapshot params
func (o *DeleteDiskSnapshotParams) SetVMID(vMID string) {
	o.VMID = vMID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteDiskSnapshotParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	// query param snapshotId
	qrSnapshotID := o.SnapshotID
	qSnapshotID := qrSnapshotID
	if qSnapshotID != "" {

		if err := r.SetQueryParam("snapshotId", qSnapshotID); err != nil {
			return err
		}
	}

	// query param vmId
	qrVMID := o.VMID
	qVMID := qrVMID
	if qVMID != "" {

		if err := r.SetQueryParam("vmId", qVMID); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
