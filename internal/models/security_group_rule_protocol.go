// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SecurityGroupRuleProtocol security group rule protocol
//
// swagger:model SecurityGroupRule.Protocol
type SecurityGroupRuleProtocol string

func NewSecurityGroupRuleProtocol(value SecurityGroupRuleProtocol) *SecurityGroupRuleProtocol {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SecurityGroupRuleProtocol.
func (m SecurityGroupRuleProtocol) Pointer() *SecurityGroupRuleProtocol {
	return &m
}

const (

	// SecurityGroupRuleProtocolPROTOCOLUNKNOWN captures enum value "PROTOCOL_UNKNOWN"
	SecurityGroupRuleProtocolPROTOCOLUNKNOWN SecurityGroupRuleProtocol = "PROTOCOL_UNKNOWN"

	// SecurityGroupRuleProtocolPROTOCOLALL captures enum value "PROTOCOL_ALL"
	SecurityGroupRuleProtocolPROTOCOLALL SecurityGroupRuleProtocol = "PROTOCOL_ALL"

	// SecurityGroupRuleProtocolPROTOCOLTCP captures enum value "PROTOCOL_TCP"
	SecurityGroupRuleProtocolPROTOCOLTCP SecurityGroupRuleProtocol = "PROTOCOL_TCP"

	// SecurityGroupRuleProtocolPROTOCOLUDP captures enum value "PROTOCOL_UDP"
	SecurityGroupRuleProtocolPROTOCOLUDP SecurityGroupRuleProtocol = "PROTOCOL_UDP"

	// SecurityGroupRuleProtocolPROTOCOLICMP captures enum value "PROTOCOL_ICMP"
	SecurityGroupRuleProtocolPROTOCOLICMP SecurityGroupRuleProtocol = "PROTOCOL_ICMP"

	// SecurityGroupRuleProtocolPROTOCOLICMPv6 captures enum value "PROTOCOL_ICMPv6"
	SecurityGroupRuleProtocolPROTOCOLICMPv6 SecurityGroupRuleProtocol = "PROTOCOL_ICMPv6"

	// SecurityGroupRuleProtocolPROTOCOLIPSEC captures enum value "PROTOCOL_IPSEC"
	SecurityGroupRuleProtocolPROTOCOLIPSEC SecurityGroupRuleProtocol = "PROTOCOL_IPSEC"
)

// for schema
var securityGroupRuleProtocolEnum []interface{}

func init() {
	var res []SecurityGroupRuleProtocol
	if err := json.Unmarshal([]byte(`["PROTOCOL_UNKNOWN","PROTOCOL_ALL","PROTOCOL_TCP","PROTOCOL_UDP","PROTOCOL_ICMP","PROTOCOL_ICMPv6","PROTOCOL_IPSEC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		securityGroupRuleProtocolEnum = append(securityGroupRuleProtocolEnum, v)
	}
}

func (m SecurityGroupRuleProtocol) validateSecurityGroupRuleProtocolEnum(path, location string, value SecurityGroupRuleProtocol) error {
	if err := validate.EnumCase(path, location, value, securityGroupRuleProtocolEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this security group rule protocol
func (m SecurityGroupRuleProtocol) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSecurityGroupRuleProtocolEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this security group rule protocol based on context it is used
func (m SecurityGroupRuleProtocol) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
