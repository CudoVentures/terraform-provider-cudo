// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1VRouterSize v1 v router size
//
// swagger:model v1.VRouterSize
type V1VRouterSize string

func NewV1VRouterSize(value V1VRouterSize) *V1VRouterSize {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1VRouterSize.
func (m V1VRouterSize) Pointer() *V1VRouterSize {
	return &m
}

const (

	// V1VRouterSizeVROUTERINSTANCEUNKNOWN captures enum value "VROUTER_INSTANCE_UNKNOWN"
	V1VRouterSizeVROUTERINSTANCEUNKNOWN V1VRouterSize = "VROUTER_INSTANCE_UNKNOWN"

	// V1VRouterSizeVROUTERINSTANCESMALL captures enum value "VROUTER_INSTANCE_SMALL"
	V1VRouterSizeVROUTERINSTANCESMALL V1VRouterSize = "VROUTER_INSTANCE_SMALL"

	// V1VRouterSizeVROUTERINSTANCEMEDIUM captures enum value "VROUTER_INSTANCE_MEDIUM"
	V1VRouterSizeVROUTERINSTANCEMEDIUM V1VRouterSize = "VROUTER_INSTANCE_MEDIUM"

	// V1VRouterSizeVROUTERINSTANCELARGE captures enum value "VROUTER_INSTANCE_LARGE"
	V1VRouterSizeVROUTERINSTANCELARGE V1VRouterSize = "VROUTER_INSTANCE_LARGE"
)

// for schema
var v1VRouterSizeEnum []interface{}

func init() {
	var res []V1VRouterSize
	if err := json.Unmarshal([]byte(`["VROUTER_INSTANCE_UNKNOWN","VROUTER_INSTANCE_SMALL","VROUTER_INSTANCE_MEDIUM","VROUTER_INSTANCE_LARGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1VRouterSizeEnum = append(v1VRouterSizeEnum, v)
	}
}

func (m V1VRouterSize) validateV1VRouterSizeEnum(path, location string, value V1VRouterSize) error {
	if err := validate.EnumCase(path, location, value, v1VRouterSizeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1 v router size
func (m V1VRouterSize) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1VRouterSizeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1 v router size based on context it is used
func (m V1VRouterSize) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
