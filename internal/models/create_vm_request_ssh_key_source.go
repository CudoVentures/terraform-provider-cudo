// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CreateVMRequestSSHKeySource create VM request Ssh key source
//
// swagger:model CreateVMRequest.SshKeySource
type CreateVMRequestSSHKeySource string

func NewCreateVMRequestSSHKeySource(value CreateVMRequestSSHKeySource) *CreateVMRequestSSHKeySource {
	return &value
}

// Pointer returns a pointer to a freshly-allocated CreateVMRequestSSHKeySource.
func (m CreateVMRequestSSHKeySource) Pointer() *CreateVMRequestSSHKeySource {
	return &m
}

const (

	// CreateVMRequestSSHKeySourceSSHKEYSOURCEUNKNOWN captures enum value "SSH_KEY_SOURCE_UNKNOWN"
	CreateVMRequestSSHKeySourceSSHKEYSOURCEUNKNOWN CreateVMRequestSSHKeySource = "SSH_KEY_SOURCE_UNKNOWN"

	// CreateVMRequestSSHKeySourceSSHKEYSOURCEPROJECT captures enum value "SSH_KEY_SOURCE_PROJECT"
	CreateVMRequestSSHKeySourceSSHKEYSOURCEPROJECT CreateVMRequestSSHKeySource = "SSH_KEY_SOURCE_PROJECT"

	// CreateVMRequestSSHKeySourceSSHKEYSOURCEUSER captures enum value "SSH_KEY_SOURCE_USER"
	CreateVMRequestSSHKeySourceSSHKEYSOURCEUSER CreateVMRequestSSHKeySource = "SSH_KEY_SOURCE_USER"

	// CreateVMRequestSSHKeySourceSSHKEYSOURCENONE captures enum value "SSH_KEY_SOURCE_NONE"
	CreateVMRequestSSHKeySourceSSHKEYSOURCENONE CreateVMRequestSSHKeySource = "SSH_KEY_SOURCE_NONE"
)

// for schema
var createVmRequestSshKeySourceEnum []interface{}

func init() {
	var res []CreateVMRequestSSHKeySource
	if err := json.Unmarshal([]byte(`["SSH_KEY_SOURCE_UNKNOWN","SSH_KEY_SOURCE_PROJECT","SSH_KEY_SOURCE_USER","SSH_KEY_SOURCE_NONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createVmRequestSshKeySourceEnum = append(createVmRequestSshKeySourceEnum, v)
	}
}

func (m CreateVMRequestSSHKeySource) validateCreateVMRequestSSHKeySourceEnum(path, location string, value CreateVMRequestSSHKeySource) error {
	if err := validate.EnumCase(path, location, value, createVmRequestSshKeySourceEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this create VM request Ssh key source
func (m CreateVMRequestSSHKeySource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCreateVMRequestSSHKeySourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this create VM request Ssh key source based on context it is used
func (m CreateVMRequestSSHKeySource) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
