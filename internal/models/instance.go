// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Instance instance
//
// swagger:model Instance
type Instance struct {

	// boot disk size gib
	BootDiskSizeGib int64 `json:"bootDiskSizeGib,omitempty"`

	// cpu model
	CPUModel string `json:"cpuModel,omitempty"`

	// create by
	// Read Only: true
	CreateBy string `json:"createBy,omitempty"`

	// datacenter Id
	// Read Only: true
	DatacenterID string `json:"datacenterId,omitempty"`

	// gpu model
	GpuModel string `json:"gpuModel,omitempty"`

	// gpu quantity
	GpuQuantity int64 `json:"gpuQuantity,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// image desc
	ImageDesc string `json:"imageDesc,omitempty"`

	// image Id
	ImageID string `json:"imageId,omitempty"`

	// image name
	ImageName string `json:"imageName,omitempty"`

	// lcm state
	LcmState string `json:"lcmState,omitempty"`

	// local Ip address
	LocalIPAddress string `json:"localIpAddress,omitempty"`

	// memory
	Memory int64 `json:"memory,omitempty"`

	// one state
	OneState string `json:"oneState,omitempty"`

	// price hr
	PriceHr float32 `json:"priceHr,omitempty"`

	// public Ip address
	PublicIPAddress string `json:"publicIpAddress,omitempty"`

	// region Id
	// Read Only: true
	RegionID string `json:"regionId,omitempty"`

	// region name
	// Read Only: true
	RegionName string `json:"regionName,omitempty"`

	// renewable energy
	RenewableEnergy bool `json:"renewableEnergy,omitempty"`

	// vcpus
	Vcpus int64 `json:"vcpus,omitempty"`
}

// Validate validates this instance
func (m *Instance) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this instance based on the context it is used
func (m *Instance) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateCreateBy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateDatacenterID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRegionID(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRegionName(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Instance) contextValidateCreateBy(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "createBy", "body", string(m.CreateBy)); err != nil {
		return err
	}

	return nil
}

func (m *Instance) contextValidateDatacenterID(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "datacenterId", "body", string(m.DatacenterID)); err != nil {
		return err
	}

	return nil
}

func (m *Instance) contextValidateRegionID(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "regionId", "body", string(m.RegionID)); err != nil {
		return err
	}

	return nil
}

func (m *Instance) contextValidateRegionName(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "regionName", "body", string(m.RegionName)); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Instance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Instance) UnmarshalBinary(b []byte) error {
	var res Instance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
